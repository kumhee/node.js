<div class="row my-5">
    <div class="contents_title">
        <h1 class="text-center mb-5 title" >도서검색</h1>
    </div>
    
    <!--검색어 입력-->
    <div class="row mb-5">
        <form name="frm" class="col-md-4">
            <div class="input-group">
                <input name="query" class="form-control">
                <button class="btn btn-outline-secondary">search</button>
            </div>
        </form>
    </div>

    <!--도서검색 결과 출력-->
    <div id="div_books"></div> 

    <!-- 페이지 이동 -->
    <div class="text-center">
        <button id="prev" class="btn btn-secondary btn-sm">이전</button>
        <span id="span_page" class="mx-3">1/10</span>
        <button id="next" class="btn btn-secondary btn-sm">다음</button>
    </div>
</div><!--row-->

<!--도서검색 템플릿-->
<script id="temp_books" type="x-handlebars-template">
    <table class="table">
        <thead class="books_thead">
            <tr>
              <th scope="col"><input type="checkbox" name="" id="all"></th>
              <th scope="col">Image</th>
              <th scope="col">Title</th>
              <th scope="col">Authors</th>
              <th scope="col">Price</th>
              <th scope="col"></th>
            </tr>
        </thead>
        <tbody class="table-group-divider books_tbody">
            {{#each documents}}
                <tr>
                    <td><input type="checkbox" class="chk" book="{{toString @this}}"></td>
                    <td><img idx="{{@index}}" src="{{isImage thumbnail}}" width="50px" alt=""></td>
                    <td style="font-weight: bold;">{{title}}</td>
                    <td style="font-weight: bold;">{{authors}}</td>
                    <td style="font-weight: bold;">{{fmtPrice price}}</td>
                    <td><button type="button" class="btn btn-outline-secondary btn-sm" book="{{toString @this}}"> 도서등록 </button></td>
                </tr>
                <%-include("modal.ejs") %>
            {{/each}}
        </tbody>
    </table>
    <div class="checkbox_btn" id="div_books_chk">
        <a type="button" class="btn btn-dark btn-sm" id="save">선택저장</a>
    </div>
</script>

<script>
    Handlebars.registerHelper("toString", function(book){
        return JSON.stringify(book);
    });

    Handlebars.registerHelper("isImage", function(image){
        if(image) {
            return image;
        } else {
            return "http://via.placeholder.com/170x230";
        }
    });

    Handlebars.registerHelper("fmtPrice", function(price){
        return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + "원"
    });
</script>

<script>
    let query = "코딩";
    let page = 1;
    getBooks();

    // 선택저장버튼을 클릭한 경우
    $("#div_books").on("click", "#save", function(){
        const chk = $("#div_books .chk:checked").length;
        if(chk == 0) {
            alert("저장할 도서를 선택해주세요.")
            return;
        } 
        if(confirm(chk + "개의 도서를 저장하시겠습니까?")) {
            let count = 0;
            $("#div_books .chk:checked").each(function(){
                const book = JSON.parse ($(this).attr("book"));
                const authors = book.authors.join(); // 배열을 문자열로 합치려면 join() 메서드를 사용
                $.ajax({
                    type: "post",
                    url: "/books/search/insert",
                    data: {...book, authors},
                    success: function(data){
                        if(data == 0) count ++;
                    }
                });
            });
            setTimeout(function(){
                alert(count + "개의 도서가 저장되었습니다.");
                $("#div_books .chk").prop("checked", false);
                $("#div_books #all").prop("checked", false);
            }, 500);
        }
    });

    // 전체선택 체크박스를 클릭한 경우
    $("#div_books").on("click", "#all", function(){
        if($(this).is(":checked")){
            $("#div_books .chk").prop("checked", true);
        }else{
            $("#div_books .chk").prop("checked", false);
        }
    });

    // 각 행의 체크박스를 클릭한 경우
    $("#div_books").on("click", ".chk", function(){
        const all = $("#div_books .chk").length;
        const chk = $("#div_books .chk:checked").length;
        if(all == chk) {
            $("#div_books #all").prop("checked", true);
        } else {
            $("#div_books #all").prop("checked", false);
        }
    });

    // 도서등록 버튼을 클릭한 경우
    $("#div_books").on("click", "button", function(){
        const book = JSON.parse($(this).attr("book"));
        const title = book.title;
        const authors = book.authors.join();
        
        if(confirm("도서를 등록하시겠습니까?")) {
            $.ajax({
                type: "post",
                url: "/books/search/insert",
                data: {...book, authors},
                success: function(data){
                    if(data == 0) {
                        alert("도서가 등록되었습니다.");
                    } else {
                        alert("이미 등록된 도서가 있습니다.");
                    }
                }
            });
        }
    });

    // 이미지를 클릭한 경우(modal)
    $("#div_books").on("click", "img", function(){
        const idx = $(this).attr("idx")
        $("#modal" + idx).modal("show");
    });

    // 다음페이지
    $("#next").on("click",function(){
        page++;
        getBooks();
    });

    // 이전페이지
    $("#prev").on("click",function(){
        page--;
        getBooks();
    });

    $(frm).on("submit", function(e){
        e.preventDefault();
        query=$(frm.query).val();
        if(query == "") {
            alert("검색어를 입력하세요!");
        } else {
            getBooks();
        }
    });

    function getBooks(){
        $.ajax({
            type:"get",
            url:"https://dapi.kakao.com/v3/search/book?target=title",
            headers:{"Authorization":"KakaoAK d941b9986c1cf774d46d2db43ec99a1a"},
            data:{query:query, page:page, size:5},
            success:function(data){
                console.log(data);
                const temp=Handlebars.compile($("#temp_books").html());
                $("#div_books").html(temp(data));
                const last = Math.ceil(data.meta.pageable_count/5);
                $("#span_page").html(`${page} / ${last}`);

                // 이전 버튼의 활성화/비활성화 
                if (page == 1) $("#prev").attr("disabled", true);
                else $("#prev").attr("disabled", false);

                // 다음 버튼의 활성화/비활성화 
                if (data.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
            }
        });
    }
</script>